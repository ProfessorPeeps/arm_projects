


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       -------------   
    2 00000000         ;Memory Accelerator Registers
    3 00000000 E01FC000 
                       MAMCR   EQU              0xE01FC000
    4 00000000 E01FC004 
                       MAMTIM  EQU              0xE01FC004
    5 00000000         
    6 00000000         ;Mode bits
    7 00000000 00000010 
                       MODE_USR
                               EQU              0x10        ;User mode
    8 00000000 00000011 
                       MODE_FIQ
                               EQU              0x11        ;FIQ mode
    9 00000000 00000012 
                       MODE_IRQ
                               EQU              0x12        ;IRQ mode
   10 00000000 00000013 
                       MODE_SVC
                               EQU              0x13        ;Supervisor mode
   11 00000000 00000017 
                       MODE_ABT
                               EQU              0x17        ;Abort mode
   12 00000000 0000001B 
                       MODE_UND
                               EQU              0x1B        ;Undefined mode
   13 00000000 0000001F 
                       MODE_SYS
                               EQU              0x1F        ;System mode
   14 00000000         
   15 00000000         ;Interrupt Bits
   16 00000000 00000080 
                       I_Bit   EQU              0x80        ;when I bit set, IR
                                                            Q disabled
   17 00000000 00000040 
                       F_Bit   EQU              0x40        ;when F bit set, FI
                                                            Q disabled
   18 00000000         
   19 00000000         ;Define Stack Size 
   20 00000000 00000100 
                       USR_Stack_Size
                               EQU              0x100       ;maybe setup fixed 
                                                            stack size to call?
                                                            
   21 00000000 00000100 
                       FIQ_Stack_Size
                               EQU              0x100
   22 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x100
   23 00000000 00000100 
                       SVC_Stack_Size
                               EQU              0x100
   24 00000000 00000100 
                       ABT_Stack_Size
                               EQU              0x100
   25 00000000 00000100 
                       UND_Stack_Size



ARM Macro Assembler    Page 2 


                               EQU              0x100
   26 00000000 00000100 
                       SYS_Stack_Size
                               EQU              0x100
   27 00000000         
   28 00000000 40000700 
                       Stack_Top
                               EQU              SRAM_BASE + USR_Stack_Size + SY
S_Stack_Size + UND_Stack_Size + ABT_Stack_Size + IRQ_Stack_Size + FIQ_Stack_Siz
e + SVC_Stack_Size
   29 00000000 40000000 
                       SRAM_BASE
                               EQU              0x40000000  ;default base value
                                                            
   30 00000000         
   31 00000000         ;-------------------------------------------------------
                       -----------------------
   32 00000000         
   33 00000000         ;VIC Stuff
   34 00000000 FFFFF00C 
                       VICIntSelect
                               EQU              0xFFFFF00C
   35 00000000 FFFFF010 
                       VICIntEnable
                               EQU              0xFFFFF010
   36 00000000 FFFFF014 
                       VICIntEnClear
                               EQU              0xFFFFF014
   37 00000000         
   38 00000000 FFFFF200 
                       VICVectCntl0
                               EQU              0xFFFFF200
   39 00000000 FFFFF100 
                       VICVectAddr0
                               EQU              0xFFFFF100
   40 00000000 FFFFF030 
                       VICVectAddr
                               EQU              0xFFFFF030
   41 00000000 E0004000 
                       TIMER0_IR
                               EQU              0xE0004000
   42 00000000         
   43 00000000         ;masks for VIC
   44 00000000 00000010 
                       TIMER0  EQU              0x10
   45 00000000         
   46 00000000         ;Pin config stuff
   47 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   48 00000000 E002C004 
                       PINSEL1 EQU              0xE002C004
   49 00000000         
   50 00000000         ;modify pins
   51 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
   52 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   53 00000000         
   54 00000000 E0028014 



ARM Macro Assembler    Page 3 


                       IO1SET  EQU              0xE0028014
   55 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   56 00000000         
   57 00000000         ;-------------------------------------------------------
                       -----
   58 00000000         
   59 00000000         
   60 00000000         ;***
   61 00000000         ;PCLK -> CTCR & TCR -> TXMCR & TC(?) -> MCR -> IR
   62 00000000         ;***
   63 00000000         
   64 00000000         ;Prescaler Addresses (PCLK)
   65 00000000 E000400C 
                       T0PR    EQU              0xE000400C
   66 00000000 E000800C 
                       T1PR    EQU              0xE000800C
   67 00000000         
   68 00000000         ;Timer/Counter Mode Addresses (CTCR)
   69 00000000 E0004070 
                       T0CTCR  EQU              0xE0004070
   70 00000000 E0004070 
                       T1CTCR  EQU              0xE0004070
   71 00000000         
   72 00000000         ;Timer Control  Addresses (TCR)
   73 00000000 E0004004 
                       T0TCR   EQU              0xE0004004
   74 00000000 E0008004 
                       T1TCR   EQU              0xE0008004
   75 00000000         
   76 00000000         ;Match register Addresses for TIMER0 (T0MRX)
   77 00000000 E0004018 
                       T0MR0   EQU              0xE0004018
   78 00000000 E000401C 
                       T0MR1   EQU              0xE000401C
   79 00000000 E0004020 
                       T0MR2   EQU              0xE0004020
   80 00000000 E0004024 
                       T0MR3   EQU              0xE0004024
   81 00000000         
   82 00000000         ;Match register Addresses for TIMER1 (T1MRX)
   83 00000000 E0008018 
                       T1MR0   EQU              0xE0008018
   84 00000000 E000801C 
                       T1MR1   EQU              0xE000801C
   85 00000000 E0008020 
                       T1MR2   EQU              0xE0008020
   86 00000000 E0008024 
                       T1MR3   EQU              0xE0008024
   87 00000000         
   88 00000000         ;Match control register Addresses (MCR)
   89 00000000 E0004014 
                       T0MCR   EQU              0xE0004014
   90 00000000 E0008014 
                       T1MCR   EQU              0xE0008014
   91 00000000         
   92 00000000         ;External Match register Addresses (EMR)
   93 00000000 E000403C 
                       T0EMR   EQU              0xE000403C



ARM Macro Assembler    Page 4 


   94 00000000 E000803C 
                       T1EMR   EQU              0xE000803C
   95 00000000         
   96 00000000         ;Match values 
   97 00000000 00009D08 
                       MATCH0  EQU              40200
   98 00000000 00013A10 
                       MATCH1  EQU              80400
   99 00000000 0001D718 
                       MATCH2  EQU              120600
  100 00000000 00027420 
                       MATCH3  EQU              160800
  101 00000000         
  102 00000000         ;Interrupt Mask for Match registers
  103 00000000 00000649 
                       MATCH_IR
                               EQU              0x649       ;(011001001001)
  104 00000000         
  105 00000000         
  106 00000000         ;-------------------------------------------------------
                       ------
  107 00000000         
  108 00000000                 IMPORT           user_code
  109 00000000         
  110 00000000         
  111 00000000                 AREA             RESET,CODE,READONLY
  112 00000000                 ENTRY
  113 00000000                 ARM
  114 00000000         
  115 00000000         VECTORS
  116 00000000 E59FF018        LDR              PC,Reset_Addr
  117 00000004 E59FF018        LDR              PC,Undef_Addr
  118 00000008 E59FF018        LDR              PC,SWI_Addr
  119 0000000C E59FF018        LDR              PC,PAbt_Addr
  120 00000010 E59FF018        LDR              PC,DAbt_Addr
  121 00000014 E1A00000        NOP
  122 00000018 E51FFFF0        LDR              PC, [PC, #-0x0FF0]
  123 0000001C E59FF018        LDR              PC,FIQ_Addr
  124 00000020         
  125 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  126 00000024 00000000 
                       Undef_Addr
                               DCD              UndefHandler
  127 00000028 00000000 
                       SWI_Addr
                               DCD              SWIHandler  ;SWI interrupt
  128 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbtHandler
  129 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbtHandler
  130 00000034 00000000        DCD              0
  131 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQHandler
  132 0000003C 00000000 



ARM Macro Assembler    Page 5 


                       FIQ_Addr
                               DCD              FIQHandler
  133 00000040         
  134 00000040 EAFFFFFE 
                       SWIHandler
                               B                SWIHandler
  135 00000044 EAFFFFFE 
                       PAbtHandler
                               B                PAbtHandler
  136 00000048 EAFFFFFE 
                       DAbtHandler
                               B                DAbtHandler
  137 0000004C EA00005C 
                       IRQHandler
                               B                ISR_SUB     ;IRQ interrupt
  138 00000050 EAFFFFFE 
                       FIQHandler
                               B                FIQHandler
  139 00000054 EAFFFFFE 
                       UndefHandler
                               B                UndefHandler
  140 00000058         
  141 00000058         ;-----------------------------------------------------
  142 00000058         ;Initialize MAM to run at one clock cycle instead of sev
                       en. Then, branch to main code. 
  143 00000058         Reset_Handler
  144 00000058         
  145 00000058 E59F11FC        LDR              r1,=MAMCR
  146 0000005C E3A00000        MOV              R0, #0x0
  147 00000060 E5810000        STR              R0, [R1]
  148 00000064 E59F21F4        LDR              R2,=MAMTIM
  149 00000068 E3A00001        MOV              R0,#0x1
  150 0000006C E5820000        STR              R0,[R2]
  151 00000070 E3A00002        MOV              R0,#0x2
  152 00000074 E5810000        STR              R0,[R1]
  153 00000078         
  154 00000078         ;-------------------------------------------------------
                       ---
  155 00000078         
  156 00000078         TIMER
  157 00000078         
  158 00000078         ;***
  159 00000078         ;PCLK -> CTCR & TCR -> TXMCR -> MCR -> IR
  160 00000078         ;***
  161 00000078         
  162 00000078         ;deal with CTCR
  163 00000078 E59F01E4        LDR              r0, =T0CTCR
  164 0000007C E3A01000        MOV              r1, #0
  165 00000080 E5801000        STR              r1, [r0]
  166 00000084         
  167 00000084         ;deal with prescaler PCLK 
  168 00000084 E59F01DC        LDR              r0, =T0PR
  169 00000088 E3A01000        MOV              r1, #0
  170 0000008C E5801000        STR              r1, [r0]    ;remove prescaler (
                                                            PR = 0)
  171 00000090         
  172 00000090         ;deal with TCR (timer control register)
  173 00000090 E59F01D4        LDR              r0, =T0TCR
  174 00000094 E5901000        LDR              r1, [r0]



ARM Macro Assembler    Page 6 


  175 00000098         
  176 00000098 E3A02000        MOV              r2, #0      ;handle reserved bi
                                                            ts
  177 0000009C E3A03003        MOV              r3, #0x3    ;enable bit zero fo
                                                            r counter enable an
                                                            d holds reset
  178 000000A0         
  179 000000A0 E0011002        AND              r1, r1, r2  ;clear all
  180 000000A4 E1811003        ORR              r1, r1, r3  ;set bits 0 and 1 
  181 000000A8 E5801000        STR              r1, [r0]
  182 000000AC         
  183 000000AC         
  184 000000AC         ;deal with MCR (match value registers)
  185 000000AC         
  186 000000AC         ;match 0 
  187 000000AC E59F01BC        LDR              r0, =T0MR0
  188 000000B0 E59F21BC        LDR              r2, =MATCH0
  189 000000B4 E5802000        STR              r2, [r0]
  190 000000B8         
  191 000000B8         ;match 1 
  192 000000B8 E59F01B8        LDR              r0, =T0MR1
  193 000000BC E59F21B8        LDR              r2, =MATCH1
  194 000000C0 E5802000        STR              r2, [r0]
  195 000000C4         
  196 000000C4         ;match 2 
  197 000000C4 E59F01B4        LDR              r0, =T0MR2
  198 000000C8 E59F21B4        LDR              r2, =MATCH2
  199 000000CC E5802000        STR              r2, [r0]
  200 000000D0         
  201 000000D0         ;match 3 
  202 000000D0 E59F01B0        LDR              r0, =T0MR3
  203 000000D4 E59F21B0        LDR              r2, =MATCH3
  204 000000D8 E5802000        STR              r2, [r0]
  205 000000DC         
  206 000000DC         ;handle T0MCR
  207 000000DC E59F01AC        LDR              r0, =T0MCR
  208 000000E0 E5901000        LDR              r1, [r0]
  209 000000E4 E3A02000        MOV              r2, #0
  210 000000E8 E59F31A4        LDR              r3, =MATCH_IR
  211 000000EC         
  212 000000EC E0011002        AND              r1, r1, r2
  213 000000F0 E1811003        ORR              r1, r1, r3
  214 000000F4 E5801000        STR              r1, [r0]
  215 000000F8         
  216 000000F8         ;Let go of reset; start count
  217 000000F8         
  218 000000F8         ;deal with TCR (timer control register)
  219 000000F8 E59F016C        LDR              r0, =T0TCR
  220 000000FC E5901000        LDR              r1, [r0]
  221 00000100         
  222 00000100 E3A03002        MOV              r3, #0x2    ;set reset value to
                                                             0 to start clock
  223 00000104 E1C11003        BIC              r1, r1, r3
  224 00000108 E5801000        STR              r1, [r0]
  225 0000010C         
  226 0000010C         ;-------------------------------------------------------
                       ---
  227 0000010C         VIC_Setup
  228 0000010C         



ARM Macro Assembler    Page 7 


  229 0000010C         ;int enable
  230 0000010C E59F0184        LDR              r0, =VICIntEnable
  231 00000110 E5901000        LDR              r1, [r0]
  232 00000114         
  233 00000114         ;Set EINT0 to 1
  234 00000114 E3A02010        LDR              r2, =TIMER0
  235 00000118 E1811002        ORR              r1, r1, r2
  236 0000011C E5801000        STR              r1, [r0]
  237 00000120         
  238 00000120         ;Select type fo interrupt
  239 00000120 E59F0174        LDR              r0, =VICIntSelect
  240 00000124 E5901000        LDR              r1, [r0]
  241 00000128         
  242 00000128         ;Set EINT0 TO IRQ
  243 00000128 E3A02010        LDR              r2, =TIMER0
  244 0000012C E1C11002        BIC              r1, r1, r2
  245 00000130 E5801000        STR              r1, [r0]
  246 00000134         
  247 00000134         ;Silence external interrupt request
  248 00000134 E59F0164        LDR              r0, =TIMER0_IR
  249 00000138 E3A0200F        LDR              r2,=0xF
  250 0000013C E5802000        STR              r2, [r0]
  251 00000140         
  252 00000140         ;Set priority of TIMER0
  253 00000140 E59F015C        LDR              r0, =VICVectCntl0
  254 00000144 E3A01024        LDR              r1, =0x24   ;enable as IRQ and 
                                                            TIMER0
  255 00000148 E5801000        STR              r1, [r0]
  256 0000014C         
  257 0000014C         ;Set address of TIMER0 interrupt
  258 0000014C E59F0154        LDR              r0, =VICVectAddr0
  259 00000150 E28F106C        ADR              r1, ISR_SUB
  260 00000154 E5801000        STR              r1, [r0]
  261 00000158         
  262 00000158         ;Assign to 
  263 00000158 E59F014C        LDR              r0, =VICVectAddr
  264 0000015C E3A01000        MOV              r1, #0
  265 00000160 E5801000        STR              r1, [r0]
  266 00000164         
  267 00000164         ;-----------------------------------------------------
  268 00000164         
  269 00000164         ;Go through each mode and set up the stack: FULL DESCEND
                       ING
  270 00000164         Stack_Setup
  271 00000164         
  272 00000164         ;SVC mode
  273 00000164 E59F0144        LDR              r0, =SRAM_BASE + SVC_Stack_Size
  274 00000168 E321F0D3        MSR              CPSR_c, #MODE_SVC + I_Bit + F_B
it
  275 0000016C E1A0D000        MOV              sp, r0
  276 00000170         
  277 00000170         ;FRQ mode
  278 00000170 E59F013C        LDR              r0, =SRAM_BASE + FIQ_Stack_Size
 + SVC_Stack_Size
  279 00000174 E321F0D1        MSR              CPSR_c, #MODE_FIQ + I_Bit + F_B
it
  280 00000178 E1A0D000        MOV              sp, r0
  281 0000017C         
  282 0000017C         ;IRQ mode



ARM Macro Assembler    Page 8 


  283 0000017C E59F0134        LDR              r0, =SRAM_BASE + IRQ_Stack_Size
 + FIQ_Stack_Size + SVC_Stack_Size
  284 00000180 E321F0D2        MSR              CPSR_c, #MODE_IRQ + I_Bit + F_B
it
  285 00000184 E1A0D000        MOV              sp, r0
  286 00000188         
  287 00000188         ;Abort mode
  288 00000188 E59F012C        LDR              r0, =SRAM_BASE + ABT_Stack_Size
 + IRQ_Stack_Size + FIQ_Stack_Size + SVC_Stack_Size
  289 0000018C E321F0D7        MSR              CPSR_c, #MODE_ABT+ I_Bit + F_Bi
t
  290 00000190 E1A0D000        MOV              sp, r0
  291 00000194         
  292 00000194         ;Undefined mode
  293 00000194 E59F0124        LDR              r0, =SRAM_BASE + UND_Stack_Size
 + ABT_Stack_Size + IRQ_Stack_Size + FIQ_Stack_Size + SVC_Stack_Size
  294 00000198 E321F0DB        MSR              CPSR_c, #MODE_UND + I_Bit + F_B
it
  295 0000019C E1A0D000        MOV              sp, r0
  296 000001A0         
  297 000001A0         ;System mode
  298 000001A0 E59F011C        LDR              r0, =SRAM_BASE + SYS_Stack_Size
 + UND_Stack_Size + ABT_Stack_Size + IRQ_Stack_Size + FIQ_Stack_Size + SVC_Stac
k_Size
  299 000001A4 E321F0DF        MSR              CPSR_c, #MODE_SYS + I_Bit + F_B
it
  300 000001A8 E1A0D000        MOV              sp, r0
  301 000001AC         
  302 000001AC         
  303 000001AC         ;User mode:
  304 000001AC         ;Set the stack for user mode
  305 000001AC E59F0114        LDR              r0, =SRAM_BASE + USR_Stack_Size
 + SYS_Stack_Size + UND_Stack_Size + ABT_Stack_Size + IRQ_Stack_Size + FIQ_Stac
k_Size + SVC_Stack_Size
  306 000001B0         
  307 000001B0         ;Enable interrupts
  308 000001B0 E3A0E010        MOV              r14, #MODE_USR
  309 000001B4 E3CEE0C0        BIC              r14, r14, #(I_Bit + F_Bit)
  310 000001B8 E121F00E        MSR              CPSR_c, r14
  311 000001BC         
  312 000001BC         ;leave startup in usercode with interrupts enabled
  313 000001BC E59FD104        LDR              sp, =Stack_Top
  314 000001C0         
  315 000001C0 EAFFFFFE        B                user_code
  316 000001C4         
  317 000001C4         ;-----------------------------------------------------
  318 000001C4         
  319 000001C4         ;ISR subroutine
  320 000001C4         ISR_SUB
  321 000001C4         
  322 000001C4 E24EE004        SUB              LR, LR, #4
  323 000001C8         
  324 000001C8         ;**Stack stuff
  325 000001C8 E92D5FFF        STMFD            SP!, {r0 - r12, LR} 
                                                            ;preserve registers
                                                            
  326 000001CC         
  327 000001CC         ;look at T0IR
  328 000001CC E59F20CC        LDR              r2, =TIMER0_IR



ARM Macro Assembler    Page 9 


  329 000001D0 E5920000        LDR              r0, [r2]
  330 000001D4 E3A0100F        MOV              r1, #0xF
  331 000001D8 E0000001        AND              r0, r0, r1  ;Anding XXXX XXXX w
                                                            e get either 0001,0
                                                            010,0100,1000
  332 000001DC         
  333 000001DC         ;For Match 0
  334 000001DC E3A01001        MOV              r1, #0x1
  335 000001E0 E1500001        CMP              r0, r1
  336 000001E4         
  337 000001E4         ;p0.12 to high
  338 000001E4 059F30E4        LDREQ            r3, =IO0SET
  339 000001E8 03A01A01        LDREQ            r1, =0x1000
  340 000001EC 05831000        STREQ            r1, [r3]
  341 000001F0         
  342 000001F0 05921000        LDREQ            r1, [r2]    ;silence intr
  343 000001F4 05821000        STREQ            r1, [r2]
  344 000001F8         
  345 000001F8         ;For Match 1
  346 000001F8 E3A01002        MOV              r1, #0x2
  347 000001FC E1500001        CMP              r0, r1
  348 00000200         
  349 00000200         ;p1.21 to high
  350 00000200 059F30C8        LDREQ            r3, =IO0SET
  351 00000204 03A01602        LDREQ            r1, =0x200000
  352 00000208 05831000        STREQ            r1, [r3]
  353 0000020C         
  354 0000020C 05921000        LDREQ            r1, [r2]    ;silence intr
  355 00000210 05821000        STREQ            r1, [r2]
  356 00000214         
  357 00000214         
  358 00000214         ;For Match 2
  359 00000214 E3A01004        MOV              r1, #0x4
  360 00000218 E1500001        CMP              r0, r1
  361 0000021C         
  362 0000021C         ;p0.12 to low
  363 0000021C 059F30B0        LDREQ            r3, =IO0CLR
  364 00000220 03A01A01        LDREQ            r1, =0x1000
  365 00000224 05831000        STREQ            r1, [r3]
  366 00000228         
  367 00000228 05921000        LDREQ            r1, [r2]    ;silence intr
  368 0000022C 05821000        STREQ            r1, [r2]
  369 00000230         
  370 00000230         ;For Match 3
  371 00000230 E3A01008        MOV              r1, #0x8
  372 00000234 E1500001        CMP              r0, r1
  373 00000238         
  374 00000238         ;p1.21 to low
  375 00000238 059F3094        LDREQ            r3, =IO0CLR
  376 0000023C 03A01602        LDREQ            r1, =0x200000
  377 00000240 05831000        STREQ            r1, [r3]
  378 00000244         
  379 00000244 05921000        LDREQ            r1, [r2]    ;silence intr
  380 00000248 05821000        STREQ            r1, [r2]
  381 0000024C         
  382 0000024C E59F0058        LDR              r0, =VICVectAddr
  383 00000250 E3A01000        MOV              r1, #0
  384 00000254 E5801000        STR              r1, [r0]
  385 00000258         



ARM Macro Assembler    Page 10 


  386 00000258         
  387 00000258         ;Stack stuff
  388 00000258 E8FD9FFF        LDMFD            SP!, {r0-r12, PC}^
  389 0000025C         
  390 0000025C         ;-----------------------------------------------------
  391 0000025C         
  392 0000025C         
  393 0000025C                 END
              E01FC000 
              E01FC004 
              E0004070 
              E000400C 
              E0004004 
              E0004018 
              00009D08 
              E000401C 
              00013A10 
              E0004020 
              0001D718 
              E0004024 
              00027420 
              E0004014 
              00000649 
              FFFFF010 
              FFFFF00C 
              E0004000 
              FFFFF200 
              FFFFF100 
              FFFFF030 
              40000100 
              40000200 
              40000300 
              40000400 
              40000500 
              40000600 
              40000700 
              00000000 
              E0028004 
              E002800C 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\mystartup.d -o.\objects\mystartup.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 524" --list=.\listings\mystartup.lst mystart
up.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbtHandler 00000048

Symbol: DAbtHandler
   Definitions
      At line 136 in file mystartup.s
   Uses
      At line 129 in file mystartup.s
      At line 136 in file mystartup.s

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 129 in file mystartup.s
   Uses
      At line 120 in file mystartup.s
Comment: DAbt_Addr used once
FIQHandler 00000050

Symbol: FIQHandler
   Definitions
      At line 138 in file mystartup.s
   Uses
      At line 132 in file mystartup.s
      At line 138 in file mystartup.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 132 in file mystartup.s
   Uses
      At line 123 in file mystartup.s
Comment: FIQ_Addr used once
IRQHandler 0000004C

Symbol: IRQHandler
   Definitions
      At line 137 in file mystartup.s
   Uses
      At line 131 in file mystartup.s
Comment: IRQHandler used once
IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 131 in file mystartup.s
   Uses
      None
Comment: IRQ_Addr unused
ISR_SUB 000001C4

Symbol: ISR_SUB
   Definitions
      At line 320 in file mystartup.s
   Uses
      At line 137 in file mystartup.s
      At line 259 in file mystartup.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbtHandler 00000044

Symbol: PAbtHandler
   Definitions
      At line 135 in file mystartup.s
   Uses
      At line 128 in file mystartup.s
      At line 135 in file mystartup.s

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 128 in file mystartup.s
   Uses
      At line 119 in file mystartup.s
Comment: PAbt_Addr used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 111 in file mystartup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 125 in file mystartup.s
   Uses
      At line 116 in file mystartup.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 143 in file mystartup.s
   Uses
      At line 125 in file mystartup.s
Comment: Reset_Handler used once
SWIHandler 00000040

Symbol: SWIHandler
   Definitions
      At line 134 in file mystartup.s
   Uses
      At line 127 in file mystartup.s
      At line 134 in file mystartup.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 127 in file mystartup.s
   Uses
      At line 118 in file mystartup.s
Comment: SWI_Addr used once
Stack_Setup 00000164



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: Stack_Setup
   Definitions
      At line 270 in file mystartup.s
   Uses
      None
Comment: Stack_Setup unused
TIMER 00000078

Symbol: TIMER
   Definitions
      At line 156 in file mystartup.s
   Uses
      None
Comment: TIMER unused
UndefHandler 00000054

Symbol: UndefHandler
   Definitions
      At line 139 in file mystartup.s
   Uses
      At line 126 in file mystartup.s
      At line 139 in file mystartup.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 126 in file mystartup.s
   Uses
      At line 117 in file mystartup.s
Comment: Undef_Addr used once
VECTORS 00000000

Symbol: VECTORS
   Definitions
      At line 115 in file mystartup.s
   Uses
      None
Comment: VECTORS unused
VIC_Setup 0000010C

Symbol: VIC_Setup
   Definitions
      At line 227 in file mystartup.s
   Uses
      None
Comment: VIC_Setup unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000100

Symbol: ABT_Stack_Size
   Definitions
      At line 24 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 288 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

FIQ_Stack_Size 00000100

Symbol: FIQ_Stack_Size
   Definitions
      At line 21 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 278 in file mystartup.s
      At line 283 in file mystartup.s
      At line 288 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 17 in file mystartup.s
   Uses
      At line 274 in file mystartup.s
      At line 279 in file mystartup.s
      At line 284 in file mystartup.s
      At line 289 in file mystartup.s
      At line 294 in file mystartup.s
      At line 299 in file mystartup.s
      At line 309 in file mystartup.s

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 52 in file mystartup.s
   Uses
      At line 363 in file mystartup.s
      At line 375 in file mystartup.s

IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 51 in file mystartup.s
   Uses
      At line 338 in file mystartup.s
      At line 350 in file mystartup.s

IO1CLR E002801C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: IO1CLR
   Definitions
      At line 55 in file mystartup.s
   Uses
      None
Comment: IO1CLR unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 54 in file mystartup.s
   Uses
      None
Comment: IO1SET unused
IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 22 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 283 in file mystartup.s
      At line 288 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 16 in file mystartup.s
   Uses
      At line 274 in file mystartup.s
      At line 279 in file mystartup.s
      At line 284 in file mystartup.s
      At line 289 in file mystartup.s
      At line 294 in file mystartup.s
      At line 299 in file mystartup.s
      At line 309 in file mystartup.s

MAMCR E01FC000

Symbol: MAMCR
   Definitions
      At line 3 in file mystartup.s
   Uses
      At line 145 in file mystartup.s
Comment: MAMCR used once
MAMTIM E01FC004

Symbol: MAMTIM
   Definitions
      At line 4 in file mystartup.s
   Uses
      At line 148 in file mystartup.s
Comment: MAMTIM used once
MATCH0 00009D08



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: MATCH0
   Definitions
      At line 97 in file mystartup.s
   Uses
      At line 188 in file mystartup.s
Comment: MATCH0 used once
MATCH1 00013A10

Symbol: MATCH1
   Definitions
      At line 98 in file mystartup.s
   Uses
      At line 193 in file mystartup.s
Comment: MATCH1 used once
MATCH2 0001D718

Symbol: MATCH2
   Definitions
      At line 99 in file mystartup.s
   Uses
      At line 198 in file mystartup.s
Comment: MATCH2 used once
MATCH3 00027420

Symbol: MATCH3
   Definitions
      At line 100 in file mystartup.s
   Uses
      At line 203 in file mystartup.s
Comment: MATCH3 used once
MATCH_IR 00000649

Symbol: MATCH_IR
   Definitions
      At line 103 in file mystartup.s
   Uses
      At line 210 in file mystartup.s
Comment: MATCH_IR used once
MODE_ABT 00000017

Symbol: MODE_ABT
   Definitions
      At line 11 in file mystartup.s
   Uses
      At line 289 in file mystartup.s
Comment: MODE_ABT used once
MODE_FIQ 00000011

Symbol: MODE_FIQ
   Definitions
      At line 8 in file mystartup.s
   Uses
      At line 279 in file mystartup.s
Comment: MODE_FIQ used once
MODE_IRQ 00000012

Symbol: MODE_IRQ
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 9 in file mystartup.s
   Uses
      At line 284 in file mystartup.s
Comment: MODE_IRQ used once
MODE_SVC 00000013

Symbol: MODE_SVC
   Definitions
      At line 10 in file mystartup.s
   Uses
      At line 274 in file mystartup.s
Comment: MODE_SVC used once
MODE_SYS 0000001F

Symbol: MODE_SYS
   Definitions
      At line 13 in file mystartup.s
   Uses
      At line 299 in file mystartup.s
Comment: MODE_SYS used once
MODE_UND 0000001B

Symbol: MODE_UND
   Definitions
      At line 12 in file mystartup.s
   Uses
      At line 294 in file mystartup.s
Comment: MODE_UND used once
MODE_USR 00000010

Symbol: MODE_USR
   Definitions
      At line 7 in file mystartup.s
   Uses
      At line 308 in file mystartup.s
Comment: MODE_USR used once
PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 47 in file mystartup.s
   Uses
      None
Comment: PINSEL0 unused
PINSEL1 E002C004

Symbol: PINSEL1
   Definitions
      At line 48 in file mystartup.s
   Uses
      None
Comment: PINSEL1 unused
SRAM_BASE 40000000

Symbol: SRAM_BASE
   Definitions
      At line 29 in file mystartup.s
   Uses
      At line 28 in file mystartup.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 273 in file mystartup.s
      At line 278 in file mystartup.s
      At line 283 in file mystartup.s
      At line 288 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

SVC_Stack_Size 00000100

Symbol: SVC_Stack_Size
   Definitions
      At line 23 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 273 in file mystartup.s
      At line 278 in file mystartup.s
      At line 283 in file mystartup.s
      At line 288 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

SYS_Stack_Size 00000100

Symbol: SYS_Stack_Size
   Definitions
      At line 26 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

Stack_Top 40000700

Symbol: Stack_Top
   Definitions
      At line 28 in file mystartup.s
   Uses
      At line 313 in file mystartup.s
Comment: Stack_Top used once
T0CTCR E0004070

Symbol: T0CTCR
   Definitions
      At line 69 in file mystartup.s
   Uses
      At line 163 in file mystartup.s
Comment: T0CTCR used once
T0EMR E000403C

Symbol: T0EMR
   Definitions
      At line 93 in file mystartup.s
   Uses
      None
Comment: T0EMR unused
T0MCR E0004014




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: T0MCR
   Definitions
      At line 89 in file mystartup.s
   Uses
      At line 207 in file mystartup.s
Comment: T0MCR used once
T0MR0 E0004018

Symbol: T0MR0
   Definitions
      At line 77 in file mystartup.s
   Uses
      At line 187 in file mystartup.s
Comment: T0MR0 used once
T0MR1 E000401C

Symbol: T0MR1
   Definitions
      At line 78 in file mystartup.s
   Uses
      At line 192 in file mystartup.s
Comment: T0MR1 used once
T0MR2 E0004020

Symbol: T0MR2
   Definitions
      At line 79 in file mystartup.s
   Uses
      At line 197 in file mystartup.s
Comment: T0MR2 used once
T0MR3 E0004024

Symbol: T0MR3
   Definitions
      At line 80 in file mystartup.s
   Uses
      At line 202 in file mystartup.s
Comment: T0MR3 used once
T0PR E000400C

Symbol: T0PR
   Definitions
      At line 65 in file mystartup.s
   Uses
      At line 168 in file mystartup.s
Comment: T0PR used once
T0TCR E0004004

Symbol: T0TCR
   Definitions
      At line 73 in file mystartup.s
   Uses
      At line 173 in file mystartup.s
      At line 219 in file mystartup.s

T1CTCR E0004070

Symbol: T1CTCR
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 70 in file mystartup.s
   Uses
      None
Comment: T1CTCR unused
T1EMR E000803C

Symbol: T1EMR
   Definitions
      At line 94 in file mystartup.s
   Uses
      None
Comment: T1EMR unused
T1MCR E0008014

Symbol: T1MCR
   Definitions
      At line 90 in file mystartup.s
   Uses
      None
Comment: T1MCR unused
T1MR0 E0008018

Symbol: T1MR0
   Definitions
      At line 83 in file mystartup.s
   Uses
      None
Comment: T1MR0 unused
T1MR1 E000801C

Symbol: T1MR1
   Definitions
      At line 84 in file mystartup.s
   Uses
      None
Comment: T1MR1 unused
T1MR2 E0008020

Symbol: T1MR2
   Definitions
      At line 85 in file mystartup.s
   Uses
      None
Comment: T1MR2 unused
T1MR3 E0008024

Symbol: T1MR3
   Definitions
      At line 86 in file mystartup.s
   Uses
      None
Comment: T1MR3 unused
T1PR E000800C

Symbol: T1PR
   Definitions
      At line 66 in file mystartup.s
   Uses
      None



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: T1PR unused
T1TCR E0008004

Symbol: T1TCR
   Definitions
      At line 74 in file mystartup.s
   Uses
      None
Comment: T1TCR unused
TIMER0 00000010

Symbol: TIMER0
   Definitions
      At line 44 in file mystartup.s
   Uses
      At line 234 in file mystartup.s
      At line 243 in file mystartup.s

TIMER0_IR E0004000

Symbol: TIMER0_IR
   Definitions
      At line 41 in file mystartup.s
   Uses
      At line 248 in file mystartup.s
      At line 328 in file mystartup.s

UND_Stack_Size 00000100

Symbol: UND_Stack_Size
   Definitions
      At line 25 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 293 in file mystartup.s
      At line 298 in file mystartup.s
      At line 305 in file mystartup.s

USR_Stack_Size 00000100

Symbol: USR_Stack_Size
   Definitions
      At line 20 in file mystartup.s
   Uses
      At line 28 in file mystartup.s
      At line 305 in file mystartup.s

VICIntEnClear FFFFF014

Symbol: VICIntEnClear
   Definitions
      At line 36 in file mystartup.s
   Uses
      None
Comment: VICIntEnClear unused
VICIntEnable FFFFF010

Symbol: VICIntEnable
   Definitions



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      At line 35 in file mystartup.s
   Uses
      At line 230 in file mystartup.s
Comment: VICIntEnable used once
VICIntSelect FFFFF00C

Symbol: VICIntSelect
   Definitions
      At line 34 in file mystartup.s
   Uses
      At line 239 in file mystartup.s
Comment: VICIntSelect used once
VICVectAddr FFFFF030

Symbol: VICVectAddr
   Definitions
      At line 40 in file mystartup.s
   Uses
      At line 263 in file mystartup.s
      At line 382 in file mystartup.s

VICVectAddr0 FFFFF100

Symbol: VICVectAddr0
   Definitions
      At line 39 in file mystartup.s
   Uses
      At line 258 in file mystartup.s
Comment: VICVectAddr0 used once
VICVectCntl0 FFFFF200

Symbol: VICVectCntl0
   Definitions
      At line 38 in file mystartup.s
   Uses
      At line 253 in file mystartup.s
Comment: VICVectCntl0 used once
57 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

user_code 00000000

Symbol: user_code
   Definitions
      At line 108 in file mystartup.s
   Uses
      At line 315 in file mystartup.s
Comment: user_code used once
1 symbol
412 symbols in table
